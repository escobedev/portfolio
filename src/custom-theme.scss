@use '@angular/material' as mat;
@include mat.core();

$dark-theme: mat.define-theme((
    color: (
        theme-type: dark,
        primary: mat.$cyan-palette,
        tertiary: mat.$azure-palette,
    ),
    density: (
        scale: 0,
    )
));

$light-theme: mat.define-theme((
    color: (
        theme-type: light,
        primary: mat.$azure-palette,
    ),
    density: (
        scale: 0,
    )
));

:root {
    @include mat.all-component-themes($dark-theme);
    background-color: var(--mat-app-background-color);
    color: var(--mat-app-text-color);
    --prism-background-color: var(--mat-app-background-color); /* Light background */
    --prism-color: var(--mat-app-text-color);
    @media (prefers-color-scheme: light) {
        @include mat.all-component-themes($light-theme);
    }
}

:root[data-theme="dark"] {
    @include mat.all-component-themes($dark-theme);
}
:root[data-theme="light"] {
    @include mat.all-component-themes($light-theme);
}

@keyframes blink {
    0% { border-color: unset; }
    50% { border-color: transparent; }
}
@keyframes fetch {
    from { opacity: 0; transform: translateY(50px); }
    to { opacity: 1; transform: translateY(0); }
}
@keyframes bloom {
    from { opacity: 0; transform: scale(0); }
    to { opacity: 1; transform: scale(1); }
}
.fetch-animation { animation: fetch 1s ease-in-out; }
.bloom-animation { animation: bloom 1s ease-in-out; }

.flex-container { width: 100%; display: flex; flex-direction: column; justify-content: center; align-items: center; }
.container { display: flex; flex-direction: column; justify-content: center; align-items: center; }
.flex-wrap { display: flex; flex-wrap: wrap; justify-content: center; align-items: center;}
.full-width { width: 100%; }
.border-box { box-sizing: border-box; }
.image-placeholder { display: flex; flex-direction: column; justify-content: center; align-items: center; height: 100%; }
.chunk { height: calc(100svh - 56px); display: flex; flex-direction: column; justify-content: center; align-items: center; }

.grid-list {
    width: 100%;
    padding: 20px;
    box-sizing: border-box;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 400px));
    justify-content: center;
    gap: 20px;
}
.grid-button-list {
    width: 100%;
    max-width: 750px;
    padding: 20px;
    box-sizing: border-box;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    justify-content: center;
    gap: 20px;
}

.relative {
    position: relative;
    .absolute { position: absolute; top: 0; left: 0; }
}

.gradient-background {
    background: linear-gradient(
        transparent 0%,
        color-mix(in srgb, var(--theme-color-1) 50%, transparent 50%) 33%,
        color-mix(in srgb, var(--theme-color-2) 50%, transparent 50%) 66%,
        transparent 100%
    );
}
.gradient-background-flat {
    background: linear-gradient(135deg, var(--theme-color-1), var(--theme-color-2));
}
.gradient-background-radial {
    background: radial-gradient(
        circle at 50% 50%,
        color-mix(in srgb, var(--theme-color-1) 50%, transparent 50%) 20%,
        color-mix(in srgb, var(--theme-color-2) 50%, transparent 50%) 40%,
        transparent 60%
    );
}
.gradient-text {
    font-weight: bold;
    background-image: linear-gradient(135deg, var(--theme-color-1), var(--theme-color-2));
    background-clip: text;
    -webkit-text-fill-color: transparent;
}
.gradient-text-1 {
    background-image: linear-gradient(135deg, var(--theme-color-1), var(--theme-color-1-2));
    background-clip: text;
    -webkit-text-fill-color: transparent;
}
.gradient-text-2 {
    background-image: linear-gradient(135deg, var(--theme-color-1-2), var(--theme-color-2));
    background-clip: text;
    -webkit-text-fill-color: transparent;
}
.gradient-text-3 {
    background-image: linear-gradient(135deg, var(--theme-color-2), var(--theme-color-1-2));
    background-clip: text;
    -webkit-text-fill-color: transparent;
}
.gradient-text-4 {
    background-image: linear-gradient(135deg, var(--theme-color-1-2), var(--theme-color-1));
    background-clip: text;
    -webkit-text-fill-color: transparent;
}
.border-1 { border: var(--theme-color-1) 2px solid !important; }
.border-2, .border-4 { border: var(--theme-color-1-2) 2px solid !important; }
.border-3 { border: var(--theme-color-2) 2px solid !important; }


abbr {
    padding: 0 2px;
    text-decoration: none;
    border: 1px solid var(--mdc-chip-outline-color);
    border-radius: 5px;
    cursor: help;
    background-color: var(--mdc-chip-elevated-container-color);
    position: relative;
    &:hover { background-color: var(--mdc-chip-elevated-selected-container-color); }
    &[role]:hover::after {
        content: attr(role);
        position: absolute;
        top: 100%;
        left: 50%;
        transform: translateX(-50%) translateY(10px);
        background-color: var(--mdc-plain-tooltip-container-color);
        color: var(--mdc-plain-tooltip-supporting-text-color);
        padding: 5px 10px;
        border-radius: 5px;
        white-space: nowrap;
        font-size: 12px;
        z-index: 10;
        visibility: visible;
        opacity: 1;
        transition: opacity 0.2s ease-in-out;
    }
    &[role]::after {
        visibility: hidden;
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
    }
}

.skill-chip .mdc-list-item__content {
    align-self: center !important;
    & > * { padding: 10px 0; }
}

.page-title { display: flex; justify-content: center; align-items: center; gap: 10px; padding: 5px; padding-top: 10px; }
.section-title { width: 100%; max-width: 720px; font-size: 2em; padding: 10px 20px; padding-top: 20px; margin: 0px; box-sizing: border-box; display: flex; align-items: center; }
.panel { width: 100%; padding: 10px; }

.transparent { opacity: 0; }
